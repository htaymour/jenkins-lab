#!groovy

// ============== NOTES =============
// curl -o $WORKSPACE/ccr1 -L 'https://github.com/htaymour/jenkins-lab/blob/main/ccr/ccr1'
  /* scm{
    description("Pull files from github repo when some developers push code to github")

    git 'https://github.com/htaymour/jenkins-lab.git' --origin maain

  } */
//   steps { 
//     script {
   
//     mail to: 'haytham.taymour@orange.com',
//     subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) is waiting for input",
//     body: "Please go to ${BUILD_URL} and verify the build"  
// }}



pipeline {
    agent none
    stages {
        stage('Init') {
            agent any
            options {
                // Timeout counter starts BEFORE agent is allocated
                timeout(time: 100, unit: 'SECONDS')
            }
            steps {
                  echo ' ** Init statge steps !'
                  sh '''
                  pwd
                  echo 'CCR request downloaded. Showing contents of latest file :'
                  cat ccr/"$(ls ccr/ -r  | grep ccr | head -n1)"
                  '''
                  //cat ccr/"$(ls ccr/ -r  | grep ccr | head -n1)"
                  // pwd
                  


            script {
                  def ccr_file=sh(script: "ls ccr/ -r  | grep ccr | head -n1", returnStdout: true).replaceAll("[\\n\\r]", "")
                  echo "The captured file is: ${ccr_file}        * Sent from Jenkins "
                  sh (script:"cp ccr/${ccr_file} cac/.")
                //   sh (script: "docker build /var/lib/jenkins/workspace/ci-monitoring/cac/.  -t deployer ", returnStdout: true)
                def container=sh(script: "docker ps -aq", returnStdout: true)"
                    sh ("docker rm ${container}")
                  sh ("docker run -d --name deployer2 deployer -f /dev/null")
                  sh ("docker cp /var/lib/jenkins/workspace/ci-monitoring/cac/. deployer2:/usr/src/ ")  // only used when skip build
                  sh ("docker exec deployer2 start_pipe.py ${ccr_file} ")  
                  sh ("docker cp deployer2:/usr/src/logs/. /var/lib/jenkins/workspace/ci-monitoring/logs/")
                  sh ("docker rm deployer2") 

            }
                
                

            }
        }
    }
}